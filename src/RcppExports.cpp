// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// skipgram_cpp2
CharacterVector skipgram_cpp2(const vector < string >& tokens, const vector < int >& ns, const vector < int >& skips, const string& delim);
RcppExport SEXP quanteda_skipgram_cpp2(SEXP tokensSEXP, SEXP nsSEXP, SEXP skipsSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const vector < string >& >::type tokens(tokensSEXP);
    Rcpp::traits::input_parameter< const vector < int >& >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< const vector < int >& >::type skips(skipsSEXP);
    Rcpp::traits::input_parameter< const string& >::type delim(delimSEXP);
    __result = Rcpp::wrap(skipgram_cpp2(tokens, ns, skips, delim));
    return __result;
END_RCPP
}
// skipgram_cppl2
List skipgram_cppl2(SEXP x, const vector < int >& ns, const vector < int >& skips, const string& delim);
RcppExport SEXP quanteda_skipgram_cppl2(SEXP xSEXP, SEXP nsSEXP, SEXP skipsSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< const vector < int >& >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< const vector < int >& >::type skips(skipsSEXP);
    Rcpp::traits::input_parameter< const string& >::type delim(delimSEXP);
    __result = Rcpp::wrap(skipgram_cppl2(x, ns, skips, delim));
    return __result;
END_RCPP
}
// skipgramcpp
StringVector skipgramcpp(std::vector < std::string > tokens, std::vector < int > ns, std::vector < int > ks, std::string delim);
RcppExport SEXP quanteda_skipgramcpp(SEXP tokensSEXP, SEXP nsSEXP, SEXP ksSEXP, SEXP delimSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector < std::string > >::type tokens(tokensSEXP);
    Rcpp::traits::input_parameter< std::vector < int > >::type ns(nsSEXP);
    Rcpp::traits::input_parameter< std::vector < int > >::type ks(ksSEXP);
    Rcpp::traits::input_parameter< std::string >::type delim(delimSEXP);
    __result = Rcpp::wrap(skipgramcpp(tokens, ns, ks, delim));
    return __result;
END_RCPP
}
// wordfishcpp
Rcpp::List wordfishcpp(SEXP wfm, SEXP dir, SEXP priors, SEXP tol, SEXP disp, SEXP dispfloor);
RcppExport SEXP quanteda_wordfishcpp(SEXP wfmSEXP, SEXP dirSEXP, SEXP priorsSEXP, SEXP tolSEXP, SEXP dispSEXP, SEXP dispfloorSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type wfm(wfmSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dir(dirSEXP);
    Rcpp::traits::input_parameter< SEXP >::type priors(priorsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< SEXP >::type disp(dispSEXP);
    Rcpp::traits::input_parameter< SEXP >::type dispfloor(dispfloorSEXP);
    __result = Rcpp::wrap(wordfishcpp(wfm, dir, priors, tol, disp, dispfloor));
    return __result;
END_RCPP
}
