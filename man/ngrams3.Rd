% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngrams2.R
\name{ngrams3}
\alias{ngrams3}
\alias{ngrams3.character}
\alias{ngrams3.tokenizedTexts}
\title{Adam's method of ngrams with R}
\usage{
ngrams3(x, ...)

\method{ngrams3}{character}(x, n = 2L, skip = 0L, concatenator = "_", ...)

\method{ngrams3}{tokenizedTexts}(x, n = 2L, skip = 0L, concatenator = "_",
  ...)
}
\arguments{
\item{x}{a tokenizedText object or a character vector of tokens}

\item{...}{not used}

\item{n}{integer vector specifying the number of elements to be concatenated 
in each ngram}

\item{skip}{integer vector specifying the adjacency skip size for tokens 
forming the ngrams, default is 0 for only immediately neighbouring words. 
For \code{skipgrams}, \code{skip} can be a vector of integers, as the 
"classic" approach to forming skip-grams is to set skip = \eqn{k} where
\eqn{k} is the distance for which \eqn{k} or fewer skips are used to construct
the \eqn{n}-gram.  Thus a "4-skip-n-gram" defined as \code{skip = 0:4}
produces results that include 4 skips, 3 skips, 2 skips, 1 skip, and 0
skips (where 0 skips are typical n-grams formed from adjacent words).  See
Guthrie et al (2006).}

\item{concatenator}{character for combining words, default is \code{_} 
(underscore) character}
}
\description{
Prototype method for R
}

