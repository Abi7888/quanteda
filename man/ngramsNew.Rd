% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ngramsDEV.R
\name{ngramsNew}
\alias{ngramsNew}
\alias{ngramsNew.character}
\alias{ngramsNew.tokenizedTexts}
\title{Create ngrams and skipgrams using potentially faster R method}
\usage{
ngramsNew(x, ...)

\method{ngramsNew}{character}(x, n = 2L, skip = 0L, concatenator = "_",
  ...)

\method{ngramsNew}{tokenizedTexts}(x, n = 2L, skip = 0L,
  concatenator = "_", ...)
}
\arguments{
\item{x}{a tokenizedText object or a character vector of tokens}

\item{...}{not used}

\item{n}{integer vector specifying the number of elements to be concatenated 
in each ngram}

\item{skip}{integer vector specifying the adjacency skip size for tokens 
forming the ngrams, default is 0 for only immediately neighbouring words. 
For \code{skipgrams}, \code{skip} can be a vector of integers, as the 
"classic" approach to forming skip-grams is to set skip = \eqn{k} where
\eqn{k} is the distance for which \eqn{k} or fewer skips are used to construct
the \eqn{n}-gram.  Thus a "4-skip-n-gram" defined as \code{skip = 0:4}
produces results that include 4 skips, 3 skips, 2 skips, 1 skip, and 0
skips (where 0 skips are typical n-grams formed from adjacent words).  See
Guthrie et al (2006).}

\item{concatenator}{character for combining words, default is \code{_} 
(underscore) character}
}
\value{
a tokenizedTexts object consisting a list of character vectors of 
  ngrams, one list element per text, or a character vector if called on a 
  simple character vector
}
\description{
Create a set of ngrams (tokens in sequence) from character vectors or
tokenized text objects, with an optional skip argument to form skipgrams. 
Both the ngram length and the skip lengths take vectors of arguments to form 
multiple lengths or skips in one pass.  \code{ngrams()} is implemented in C++
for efficiency.
}
\examples{
# ngrams
ngrams(LETTERS, n = 2)
ngramsNew(LETTERS, n = 2)
ngrams(LETTERS, n = 2, skip = 1)
ngrams(LETTERS, n = 2, skip = 0:1)
ngrams(LETTERS, n = 1:2)
ngramsNew(LETTERS, n = 1:2)
ngrams(LETTERS, n = c(2,3), skip = 0:1)

tokens <- tokenize(c(testText = "the quick brown fox jumped over the lazy dog."), 
                   removePunct = TRUE)
ngrams(tokens, n = 1:3)
ngramsNew(tokens, n = 1:3)
ngrams(tokens, n = c(2,4), concatenator = " ")
ngramsNew(tokens, n = c(2,4), concatenator = " ")
ngrams(tokens, n = c(2,4), skip = 1, concatenator = " ")

# skipgrams
\dontrun{
# performance benchmarking
toks <- tokenize(inaugTexts, removePunct = TRUE)
rbenchmark::benchmark(new = ngramsNew(toks, n = 1:4),
                      new2 = skipgram_cppl2(toks, 1:4, 1, '_'),
                      #old = ngrams(toks, n = 1:4),
                      replications = 2)
##   test replications elapsed relative user.self sys.self user.child sys.child
## 1  new            2   0.499    1.000     0.494    0.006      0.000     0.000
## 2  old            2  76.589  153.485    67.438    8.899      0.022     0.038
}
}
\author{
Adam Obeng, Kohei Watanabe and Ken Benoit
}

